{"remainingRequest":"/Users/tputman/CODE/dc_geno_pheno/dc_geno_pheno/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tputman/CODE/dc_geno_pheno/dc_geno_pheno/src/components/MonarchAssociations.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tputman/CODE/dc_geno_pheno/dc_geno_pheno/src/components/MonarchAssociations.vue","mtime":1540483847962},{"path":"/Users/tputman/CODE/dc_geno_pheno/dc_geno_pheno/node_modules/cache-loader/dist/cjs.js","mtime":1539379416466},{"path":"/Users/tputman/CODE/dc_geno_pheno/dc_geno_pheno/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tputman/CODE/dc_geno_pheno/dc_geno_pheno/node_modules/cache-loader/dist/cjs.js","mtime":1539379416466},{"path":"/Users/tputman/CODE/dc_geno_pheno/dc_geno_pheno/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as BL from '@/api/BioLink';\n\nexport default {\n  name: 'MonarchAssociations',\n  props: {\n    curie: {\n      type: String,\n      required: true,\n    },\n    category: {\n      type: String,\n      required: true,\n    }\n  },\n  data() {\n    return {\n      fields: ['Association Type', 'Count'],\n      items: [],\n      dataPacket: '',\n    };\n  },\n  computed: {\n    monarchUrl() {\n      return `https://monarchinitiative.org/${this.category}/${this.curie}`;\n    },\n    hippoUrl() {\n      return `http://hippo.monarchinitiative.org/#/query/${this.curie}`;\n    },\n  },\n  mounted(){\n    this.fetchData(this.curie, this.category);\n  },\n  watch: {\n    curie: function () {\n      this.fetchData(this.curie, this.category);\n    }\n  },\n  methods: {\n    async fetchData(nodeID, nodeType) {\n      try {\n        const searchResponse = await BL.getNodeSummary(nodeID, nodeType);\n        this.dataPacket = searchResponse;\n      }\n      catch (e) {\n        console.log('nodeResponse ERROR', e, this);\n      }\n    },\n    monarchUrlAnchored(cardType) {\n      if (cardType === 'literature') {\n        return `https://monarchinitiative.org/${this.category}/${this.curie}#${cardType}`;\n      }\n      else{\n        return `https://monarchinitiative.org/${this.category}/${this.curie}#${cardType}s`;\n      }\n    },\n  },\n};\n",{"version":3,"sources":["MonarchAssociations.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MonarchAssociations.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"card\">\n    <div class=\"card-header\">Monarch Data\n    </div>\n    <div class=\"card-body\">\n      <div class=\"p-2\"><strong>Preferred Label:</strong><br/>\n        <a v-bind:href=\"monarchUrl\"><h2>{{dataPacket.label}}</h2></a>\n      </div>\n      <div class=\"p-2\"><strong>Identifier:</strong><br/>{{dataPacket.id}}</div>\n      <div class=\"p-2\"><strong>Description:</strong><br/>{{dataPacket.description}}</div>\n      <div class=\"p-2\"><strong>Synonyms:</strong><br/>\n        <h5> <span class=\"badge badge-primary badge-info badge-large mx-1\"\n                   v-for=\"syn in dataPacket.synonyms\">\n          {{syn.val}}</span></h5>\n      </div>\n      <table style=\"width:100%\">\n        <th>Association</th>\n        <th>Count</th>\n        <tr v-for=\"(value, index) in dataPacket.counts\">\n          <td>{{index}}</td>\n          <td><a :href=\"monarchUrlAnchored(index)\">{{value.totalCount}}</a></td>\n        </tr>\n          <div class=\"btn btn-outline-info\"><a :href=\"hippoUrl\">Hippo Semantic Literature Search</a></div>\n      </table>\n    </div>\n  </div>\n</template>\n<script>\n  import * as BL from '@/api/BioLink';\n\n  export default {\n    name: 'MonarchAssociations',\n    props: {\n      curie: {\n        type: String,\n        required: true,\n      },\n      category: {\n        type: String,\n        required: true,\n      }\n    },\n    data() {\n      return {\n        fields: ['Association Type', 'Count'],\n        items: [],\n        dataPacket: '',\n      };\n    },\n    computed: {\n      monarchUrl() {\n        return `https://monarchinitiative.org/${this.category}/${this.curie}`;\n      },\n      hippoUrl() {\n        return `http://hippo.monarchinitiative.org/#/query/${this.curie}`;\n      },\n    },\n    mounted(){\n      this.fetchData(this.curie, this.category);\n    },\n    watch: {\n      curie: function () {\n        this.fetchData(this.curie, this.category);\n      }\n    },\n    methods: {\n      async fetchData(nodeID, nodeType) {\n        try {\n          const searchResponse = await BL.getNodeSummary(nodeID, nodeType);\n          this.dataPacket = searchResponse;\n        }\n        catch (e) {\n          console.log('nodeResponse ERROR', e, this);\n        }\n      },\n      monarchUrlAnchored(cardType) {\n        if (cardType === 'literature') {\n          return `https://monarchinitiative.org/${this.category}/${this.curie}#${cardType}`;\n        }\n        else{\n          return `https://monarchinitiative.org/${this.category}/${this.curie}#${cardType}s`;\n        }\n      },\n    },\n  };\n</script>\n<style></style>\n"]}]}
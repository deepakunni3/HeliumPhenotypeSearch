{"remainingRequest":"/Users/tputman/CODE/dc_geno_pheno/dc_geno_pheno/node_modules/babel-loader/lib/index.js!/Users/tputman/CODE/dc_geno_pheno/dc_geno_pheno/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tputman/CODE/dc_geno_pheno/dc_geno_pheno/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tputman/CODE/dc_geno_pheno/dc_geno_pheno/src/components/MonarchAssociations.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tputman/CODE/dc_geno_pheno/dc_geno_pheno/src/components/MonarchAssociations.vue","mtime":1539630456983},{"path":"/Users/tputman/CODE/dc_geno_pheno/dc_geno_pheno/node_modules/cache-loader/dist/cjs.js","mtime":1539379416466},{"path":"/Users/tputman/CODE/dc_geno_pheno/dc_geno_pheno/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tputman/CODE/dc_geno_pheno/dc_geno_pheno/node_modules/cache-loader/dist/cjs.js","mtime":1539379416466},{"path":"/Users/tputman/CODE/dc_geno_pheno/dc_geno_pheno/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/tputman/CODE/dc_geno_pheno/dc_geno_pheno/node_modules/@babel/runtime/helpers/builtin/es6/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as BL from '@/api/BioLink';\nexport default {\n  name: 'MonarchAssociations',\n  props: {\n    curie: {\n      type: String,\n      required: true\n    },\n    category: {\n      type: String,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      geneData: '',\n      genotypeData: '',\n      variantData: '',\n      diseaseData: '',\n      literatureData: '',\n      phenotypeData: '',\n      dataPacket: ''\n    };\n  },\n  computed: {\n    monarchUrl: function monarchUrl() {\n      return \"https://monarch-initiative.github.io/monarch-ui/\".concat(this.category, \"/\").concat(this.curie);\n    }\n  },\n  mounted: function mounted() {\n    this.fetchData(this.curie, this.category);\n    this.fetchAssociations(this.category, this.curie, 'gene');\n    this.fetchAssociations(this.category, this.curie, 'disease');\n    this.fetchAssociations(this.category, this.curie, 'genotype');\n    this.fetchAssociations(this.category, this.curie, 'literature');\n    this.fetchAssociations(this.category, this.curie, 'variant');\n  },\n  watch: {\n    curie: function curie() {\n      this.fetchData(this.curie, this.category);\n      this.fetchAssociations(this.category, this.curie, 'gene');\n      this.fetchAssociations(this.category, this.curie, 'disease');\n      this.fetchAssociations(this.category, this.curie, 'genotype');\n      this.fetchAssociations(this.category, this.curie, 'literature');\n      this.fetchAssociations(this.category, this.curie, 'variant');\n    }\n  },\n  methods: {\n    fetchData: function () {\n      var _fetchData = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(nodeID, nodeType) {\n        var searchResponse;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return BL.getNodeSummary(nodeID, nodeType);\n\n              case 3:\n                searchResponse = _context.sent;\n                this.dataPacket = searchResponse;\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                console.log('nodeResponse ERROR', _context.t0, this);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 7]]);\n      }));\n\n      return function fetchData(_x, _x2) {\n        return _fetchData.apply(this, arguments);\n      };\n    }(),\n    fetchAssociations: function () {\n      var _fetchAssociations = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(nodeType, nodeID, cardType) {\n        var searchResponse;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return BL.getNodeAssociations(nodeType, nodeID, cardType, {\n                  'rows': 50000\n                });\n\n              case 3:\n                searchResponse = _context2.sent;\n\n                if (cardType === 'gene') {\n                  this.geneData = searchResponse;\n                }\n\n                if (cardType === 'disease') {\n                  this.diseaseData = searchResponse;\n                }\n\n                if (cardType === 'genotype') {\n                  this.genotypeData = searchResponse;\n                }\n\n                if (cardType === 'literature') {\n                  this.literatureData = searchResponse;\n                }\n\n                if (cardType === 'variant') {\n                  this.variantData = searchResponse;\n                }\n\n                _context2.next = 14;\n                break;\n\n              case 11:\n                _context2.prev = 11;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.log('nodeResponse ERROR', _context2.t0, this);\n\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 11]]);\n      }));\n\n      return function fetchAssociations(_x3, _x4, _x5) {\n        return _fetchAssociations.apply(this, arguments);\n      };\n    }()\n  }\n};",{"version":3,"sources":["MonarchAssociations.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"card\">\n    <div class=\"card-header\">Monarch Data\n\n    </div>\n    <div class=\"card-body\">\n\n      <div class=\"p-2\"><strong>Label:</strong><br/><a v-bind:href=\"monarchUrl\">{{dataPacket.label}}</a></div>\n      <div class=\"p-2\"><strong>Identifier:</strong><br/>{{dataPacket.id}}</div>\n      <div class=\"p-2\"><strong>Description:</strong><br/>{{dataPacket.description}}</div>\n      <div class=\"p-2\"><strong>Associations:</strong>\n        <div\n            class=\"p-2\"\n            v-if=\"geneData\"\n        >\n          Genes:\n          {{geneData.data.associations.length}}\n        </div>\n        <div\n            class=\"p-2\"\n            v-if=\"diseaseData\"\n        >\n          Diseases:\n          {{diseaseData.data.associations.length}}\n        </div>\n        <div\n            class=\"p-2\"\n            v-if=\"variantData\"\n        >\n          Variants:\n          {{variantData.data.associations.length}}\n        </div>\n        <div\n            class=\"p-2\"\n            v-if=\"genotypeData\"\n        >\n          Genotypes:\n          {{genotypeData.data.associations.length}}\n        </div>\n        <div\n            class=\"p-2\"\n            v-if=\"phenotypeData\"\n        >\n          Phenotypes:\n          {{phenotypeData.data.associations.length}}\n        </div>\n        <div\n            class=\"p-2\"\n            v-if=\"literatureData\"\n        >\n          Literature:\n          {{literatureData.data.associations.length}}\n        </div>\n      </div>\n    </div>\n\n  </div>\n</template>\n<script>\n  import * as BL from '@/api/BioLink';\n\n  export default {\n    name: 'MonarchAssociations',\n    props: {\n      curie: {\n        type: String,\n        required: true,\n      },\n      category: {\n        type: String,\n        required: true,\n      }\n    },\n    data() {\n      return {\n        geneData: '',\n        genotypeData: '',\n        variantData: '',\n        diseaseData: '',\n        literatureData: '',\n        phenotypeData: '',\n        dataPacket: '',\n      };\n    },\n    computed: {\n      monarchUrl() {\n        return `https://monarch-initiative.github.io/monarch-ui/${this.category}/${this.curie}`\n      }\n    },\n    mounted(){\n      this.fetchData(this.curie, this.category);\n      this.fetchAssociations(this.category, this.curie, 'gene');\n      this.fetchAssociations(this.category, this.curie, 'disease');\n      this.fetchAssociations(this.category, this.curie, 'genotype');\n      this.fetchAssociations(this.category, this.curie, 'literature');\n      this.fetchAssociations(this.category, this.curie, 'variant');\n    },\n    watch: {\n      curie: function () {\n        this.fetchData(this.curie, this.category);\n        this.fetchAssociations(this.category, this.curie, 'gene');\n        this.fetchAssociations(this.category, this.curie, 'disease');\n        this.fetchAssociations(this.category, this.curie, 'genotype');\n        this.fetchAssociations(this.category, this.curie, 'literature');\n        this.fetchAssociations(this.category, this.curie, 'variant');\n      }\n    },\n    methods: {\n      async fetchData(nodeID, nodeType) {\n        try {\n          const searchResponse = await BL.getNodeSummary(nodeID, nodeType);\n          this.dataPacket = searchResponse;\n        }\n        catch (e) {\n          console.log('nodeResponse ERROR', e, this);\n        }\n      },\n      async fetchAssociations(nodeType, nodeID, cardType) {\n        try {\n          const searchResponse = await BL.getNodeAssociations(nodeType, nodeID, cardType, {'rows': 50000});\n          if (cardType === 'gene') {\n            this.geneData = searchResponse;\n          }\n          if (cardType === 'disease') {\n            this.diseaseData = searchResponse;\n          }\n          if (cardType === 'genotype') {\n            this.genotypeData = searchResponse;\n          }\n          if (cardType === 'literature') {\n            this.literatureData = searchResponse;\n          }\n          if (cardType === 'variant') {\n            this.variantData = searchResponse;\n          }\n        }\n        catch (e) {\n          console.log('nodeResponse ERROR', e, this);\n        }\n      },\n    },\n  };\n</script>\n<style></style>\n"],"sourceRoot":"src/components"}]}